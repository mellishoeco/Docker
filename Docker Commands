➤ Image vs Containers 
➤ run containers 
➤ Check container logs & process
➤ Why Containers required? 
➤ What is Image? 
➤ Image is the Application we want to run 
➤ Containers is an running instance of an Image 
➤ You can have many containers running the same image 
➤ In this lecture we will use Open Source Nginx Web-Server 
➤ Docker Central Repository (hub.docker.com)
➤ Start with Hello World Docker Image 
➤ Start Nginx web-server in Docker
docker container run - -publish <host_port:container_port> 
<image_name>
➤ Process Done:
Dowloaded the Images form Docker Hub
Started new Container 
Exposed port 80 on Host Machine
Routes traffic to the container port 80
➤ Stop Container fore-ground process
ctrl+c
➤ Start Container in Back-Ground or detach mode
docker container run - -publish <host_port:container_port> 
- -detach <image_name>
➤ List running Containers
docker container ls
docker ps (Old Way)
---------------
3. Stop-Remove the Containers
➤ Stop Docker Containers
docker container stop <container_id> 
➤ List all running and stopped containers
docker containers ls -a
➤ Run vs Start Container 
run: start a new container always
start: start a existing containers
➤ Docker container names
docker container run - -publish 80:80 - -detach - -name 
<Name> <Image_Name>
➤ See logs of a specific container
docker container logs <container_name>/<container_id>
➤ See process running inside the containers
docker container top <container_id>
➤ Remove all unused containers
docker container rm <space separated container ids>
-------------
4. Docker Internal Processing
➤ Looks for the image in Image Cache 
➤ Then looks in remote docker repository (default 
hub.docker.com ) 
➤ Download the latest version of image 
➤ Create new container based on the image 
➤ Gives it a virtual IP on private network inside docker engine 
➤ Open port 80 on host machine and route to port 80 inside 
container 
➤ Starts container by using CMD in imager docker file
------------
5. Containers vs Virtual Machines
➤ Containers and virtual machines both have similar resource 
allocation and allocation benefits. 
➤ Containers and VMs are functionally different because 
containers virtualise the Operating System and VMs are 
virtualise the hardware. 
➤ Containers are more portable.
➤ Containers are just processes. 
➤ Containers are limited what resources they can access. 
➤ Exit when process exits
-------------
6. Assignment  Manage Multiple Containers
➤ docs.docker.com and - -help command will be helpful 
➤ Run a nginx, a mysql, and a apache server
➤ Run all containers in background 
➤ Provide a name to all containers 
➤ Start nginx on port 80:80 
➤ Start apache server on port 8080:80 
➤ Start mysql on port 3306:3306
➤ When running mysql, use - -env to pass the environment 
variable 
MYSQL_RANDOM_ROOT_PASSWORD=yes
➤ Use docker container logs command on mysql to find the 
random password, created on start-up 
➤ Clean all the containers after the assignment done
----------------

